{
  "key": "systemAbstraction",
  "value": {
    "designRules": "1. カラーパレット\n\nプライマリーカラー:\n- メインカラー: #2C5282\n- アクセントカラー: #4299E1\n\nセカンダリーカラー:\n- サブカラー1: #718096\n- サブカラー2: #A0AEC0\n\n背景色:\n- メイン背景: #F7FAFC\n- セカンダリー背景: #EDF2F7\n\nテキストカラー:\n- プライマリーテキスト: #2D3748\n- セカンダリーテキスト: #4A5568\n- 無効テキスト: #A0AEC0\n\nステータスカラー:\n- 成功: #48BB78\n- 警告: #ECC94B\n- エラー: #E53E3E\n- 情報: #4299E1\n\n2. タイポグラフィ\n- フォントファミリー: 'Noto Sans JP'\n- 基本フォントサイズ: 16px\n\n3. スペーシング\n- ベースユニット: 8px\n- マージン・パディング: 8の倍数\n\n4. シャドウ\n- 軽量: 0 1px 3px rgba(0,0,0,0.12)\n- 中程度: 0 4px 6px rgba(0,0,0,0.1)\n- 重量: 0 10px 15px rgba(0,0,0,0.1)\n\n5. ボーダー\n- 半径: 4px\n- 色: #E2E8F0",
    "codingRules": "1. 命名規則\n- クラス名: PascalCase (例: EmployeeProfile)\n- メソッド名: camelCase (例: getSkillList)\n- 変数名: camelCase (例: skillLevel)\n- 定数: SNAKE_CASE (例: MAX_SKILL_LEVEL)\n- プライベート変数: _prefixつき (例: _privateVar)\n\n2. インデント・フォーマット\n- インデント: スペース2個\n- 1行の最大文字数: 120文字\n- 関数の最大行数: 50行\n\n3. コメント\n- クラス定義: 必須\n- public メソッド: 必須\n- 複雑なロジック: 必須\n- JSDoc形式を使用\n\n4. エラー処理\n- try-catch の適切な使用\n- エラーログの標準化\n- ユーザーフレンドリーなエラーメッセージ\n\n5. コード品質\n- ESLint/Prettier の使用\n- Unit Test カバレッジ 80%以上\n- Sonarqubeによる静的解析\n\n6. バージョン管理\n- feature branch workflow\n- コミットメッセージの規約化\n- PRレビュー必須",
    "systemAbstraction": "社内人材のスキルとアイデアを効果的にマッチングし、部門を越えたシナジーを創出するAI活用プラットフォーム。\n\n主要機能:\n1. プロフィール・スキル管理\n- 社員の基本情報、スキル、経歴の一元管理\n- 人事データベースとの自動連携\n- スキルの定期的な更新促進\n\n2. 課題・アイデア共有\n- 業務課題やアイデアの投稿・共有\n- ステータス管理とフィードバック機能\n- 部門横断的な知見の集約\n\n3. AIマッチング\n- スキルと課題/アイデアの最適マッチング\n- プロジェクトチーム編成支援\n- シナジー効果の予測\n\n4. コミュニケーション\n- マッチングした社員間のメッセージング\n- プロジェクトグループチャット\n- 情報共有の活性化\n\n5. データ分析・可視化\n- スキルマップ生成\n- 人材活用状況の分析\n- スキルギャップ分析\n\nシステム特徴:\n- REST API baseのマイクロサービスアーキテクチャ\n- リアルタイムデータ連携\n- セキュアなアクセス制御\n- 直感的なUI/UX\n- 拡張性を考慮した設計"
  }
}
